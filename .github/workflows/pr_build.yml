name: Pull Request Build

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml

    - name: Generate matrix for build
      id: set-matrix
      run: |
        MATRIX_JSON=$(python scripts/matrix-generator.py)
        echo "${MATRIX_JSON}"
        echo "::set-output name=matrix::$MATRIX_JSON"
      env:
        GH_BASE_SHA: ${{ github.event.pull_request.base.sha }}
        GITHUB_SHA: ${{ github.sha }}

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

  build-images:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.build.outputs.matrix)}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up QEMU
      if: contains(matrix.architectures, 'arm')
      uses: docker/setup-qemu-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.context }}/Dockerfile
        push: false
        tags: ${{ join(matrix.tags, ',') }}
        platforms: ${{ join(matrix.architectures, ',') }}
